#!/bin/bash

# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-which-directory-it-is-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  TARGET="$(readlink "$SOURCE")"
  if [[ $TARGET == /* ]]; then
    SOURCE="$TARGET"
  else
    DIR="$( dirname "$SOURCE" )"
    SOURCE="$DIR/$TARGET" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  fi
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [ -z "$EXTERNAL_REGISTRY_BASE_DOMAIN" ]; then
  echo "No base domain provided!  Aborting"
  exit 1
else

  case $EXTERNAL_REGISTRY_BASE_DOMAIN in
    *amazonaws.com*)
      "${DIR}/registries/docker-pull.ecr.sh" ||
        { echo "Could not authenticate." && exit 1; }
      ;;

    *gcr.io*)
      "${DIR}/registries/docker-pull.gcr.sh" ||
        { echo "Could not authenticate." && exit 1; }
      ;;

    *quay.io*)
      "${DIR}/registries/docker-pull.quay.sh" ||
        { echo "Could not authenticate." && exit 1; }
      ;;

  esac
fi
# this should exit 0 even if the image is not there. For example, on a first run
docker pull ${EXTERNAL_REGISTRY_BASE_DOMAIN}/${REPOSITORY_NAME}:latest || true
